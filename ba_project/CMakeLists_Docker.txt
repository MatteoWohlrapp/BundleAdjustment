cmake_minimum_required(VERSION 3.6)

set(CMAKE_CONFIGURATION_TYPES Debug Release CACHE TYPE INTERNAL FORCE)

project(ba_project)

# Options

# Set C++ flags
set(CMAKE_CXX_STANDARD 14)

#find_package(nanoflann REQUIRED)
find_package(Ceres REQUIRED)
find_package(glog REQUIRED)
get_target_property(GLOG_DLL_PATH_DEBUG glog::glog IMPORTED_LOCATION_DEBUG)
get_target_property(GLOG_DLL_PATH_RELEASE glog::glog IMPORTED_LOCATION_RELEASE)
find_package(OpenCV REQUIRED)
find_package(PCL 1.12 REQUIRED) 

add_definitions("-D_DISABLE_EXTENDED_ALIGNED_STORAGE")

set(HEADER_FILES 
    src/utils/Eigen.h 
    src/visualization/SimpleMesh.h 
    src/model/PointCloud.h 
    src/data/VirtualSensor.h 
    src/data/FreeImageHelper.h
    src/ba/FeatureProcessor.h
    src/model/Frame.h
    src/model/MapPoint.h
    src/model/SceneMap.h
    src/ba/Optimizer.h
    src/ba/Initializer.h
    src/ba/SfMHelper.h
    src/metrics/ReconstructionError.h
    src/ba/BundleAdjustment.h
    src/visualization/Visualizer.h
)

set(SOURCE_FILES 
    src/data/FreeImageHelper.cpp
    src/ba/FeatureProcessor.cpp
    src/model/Frame.cpp
    src/model/MapPoint.cpp
    src/model/SceneMap.cpp
    src/ba/Initializer.cpp
    src/ba/SfMHelper.cpp
    src/ba/Optimizer.cpp
    src/metrics/ReconstructionError.cpp
    src/visualization/SimpleMesh.cpp 
    src/ba/BundleAdjustment.cpp
    src/visualization/Visualizer.cpp
)

set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fsanitize=address")
set(CMAKE_LINKER_FLAGS_DEBUG "${CMAKE_LINKER_FLAGS_DEBUG} -fsanitize=address")

link_directories(${PCL_LIBRARY_DIRS} ${FreeImage_LIBRARY_DIR})
add_executable(ba_project src/main.cpp ${HEADER_FILES} ${SOURCE_FILES})
target_link_libraries(ba_project ceres ${PCL_LIBRARIES} freeimage Eigen3::Eigen ${OpenCV_LIBS})
target_include_directories(ba_project PUBLIC ${PCL_INCLUDE_DIRS} ${EIGEN3_INCLUDE_DIR} ${FreeImage_INCLUDE_DIR} ${Flann_INCLUDE_DIR} ${OpenCV_INCLUDE_DIRS})

list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)
include(googletest)
